SELECT ... (SELECT ...) FROM ...

## Listar o valor total de cada pedido

SELECT PED.PED_CODIGO, 
       SUM(VALOR_BRUTO) AS TOTAL
  FROM ITEM ITM
  JOIN PEDIDO PED 
    ON ITM.PED_CODIGO = PED.PED_CODIGO
 GROUP BY 1 
 ORDER BY 1
 
SELECT PED.PED_CODIGO,
      (SELECT SUM(VALOR_BRUTO)
         FROM ITEM ITM
	WHERE ITM.PED_CODIGO = PED.PED_CODIGO) AS TOTAL
  FROM PEDIDO PED
 WHERE PED.PED_CODIGO < 3 
 ORDER BY 1  
   
SELECT ... FROM (SELECT ...) 

-- Listar o nome (somente o nome) dos 5 paÃ­ses 
-- com maior quantidade de pedido
SELECT INTERNO.PAIS 
  FROM (SELECT PAI.NOME AS PAIS, COUNT(*)   
          FROM PEDIDO PED
          JOIN CONSUMIDOR CON ON PED.CON_CODIGO = CON.CON_CODIGO
          JOIN CIDADE CID ON CON.CID_CODIGO = CID.CID_CODIGO
          JOIN PAIS PAI ON CID.PAI_CODIGO = PAI.PAI_CODIGO
         GROUP BY 1 ORDER BY 2 DESC) AS INTERNO 
LIMIT 5 
 
WITH INTERNO AS
(SELECT PAI.NOME AS PAIS, COUNT(*)   
  FROM PEDIDO PED
  JOIN CONSUMIDOR CON ON PED.CON_CODIGO = CON.CON_CODIGO
  JOIN CIDADE CID ON CON.CID_CODIGO = CID.CID_CODIGO
  JOIN PAIS PAI ON CID.PAI_CODIGO = PAI.PAI_CODIGO
 GROUP BY 1 ORDER BY 2 DESC)
SELECT INTERNO.PAIS FROM INTERNO LIMIT 5 

SELECT ... FROM ... WHERE ... OPERADOR (SELECT ...)

SELECT NOME 
  FROM PAIS
 WHERE PAI_CODIGO IN
      (SELECT PAI.PAI_CODIGO   
         from pedido ped
         join consumidor con on (ped.con_codigo = con.con_codigo)
         join cidade cid on (con.cid_codigo = cid.cid_codigo)
         join pais pai on (cid.pai_codigo = pai.pai_codigo)
        WHERE EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2014) 

SELECT NOME 
  FROM PAIS
 WHERE PAI_CODIGO NOT IN
      (SELECT PAI.PAI_CODIGO   
         from pedido ped
         join consumidor con on (ped.con_codigo = con.con_codigo)
         join cidade cid on (con.cid_codigo = cid.cid_codigo)
         join pais pai on (cid.pai_codigo = pai.pai_codigo)
        WHERE EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2014) 

SELECT ... FROM ... GROUP BY .... HAVING BY ... OPERADOR (SELECT ...)

SELECT PED.PED_CODIGO, SUM(VALOR_BRUTO) AS TOTAL
  FROM ITEM ITM JOIN PEDIDO PED ON ITM.PED_CODIGO = PED.PED_CODIGO 
 GROUP BY 1
 HAVING SUM(VALOR_BRUTO) >  
       (SELECT AVG(INTERNO.TOTAL) 
		  FROM (SELECT PED.PED_CODIGO, SUM(VALOR_BRUTO) AS TOTAL
                  FROM ITEM ITM 
				  JOIN PEDIDO PED ON ITM.PED_CODIGO = PED.PED_CODIGO 
                 GROUP BY 1) AS INTERNO)

ALL / ANY / SOME

select pai.nome, count(*) as total
  from pedido ped 
  join consumidor con on (ped.con_codigo = con.con_codigo)
  join cidade cid on (con.cid_codigo = cid.cid_codigo)
  join pais pai on (cid.pai_codigo = pai.pai_codigo)
 group by 1 having count(*) > all (
            select interno.quantidade 
              from (select pai.nome, count(*) as quantidade
                      from pedido ped
                      join consumidor con on (ped.con_codigo = con.con_codigo)
                      join cidade cid on (con.cid_codigo = cid.cid_codigo)
                      join pais pai on (cid.pai_codigo = pai.pai_codigo)
                      join regiao reg on (pai.reg_codigo = reg.reg_codigo)
                     where reg.descricao = 'Oceania' 
                     group by 1 
                     order by 2 desc) 
                   as interno) 

 -- (NOT) IN / (NOT) EXISTS / INTERSECT-EXCEPT

SELECT NOME 
FROM PAIS PAI 
WHERE PAI_CODIGO NOT IN 
  (SELECT PAI_CODIGO FROM PEDIDO PED
     JOIN CONSUMIDOR CON ON PED.CON_CODIGO = CON.CON_CODIGO
     JOIN CIDADE CID ON CON.CID_CODIGO = CID.CID_CODIGO
    WHERE EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2014) 
ORDER BY 1

SELECT NOME 
FROM PAIS PAI 
WHERE NOT EXISTS 
  (SELECT 1 
     FROM PEDIDO PED
     JOIN CONSUMIDOR CON ON PED.CON_CODIGO = CON.CON_CODIGO
     JOIN CIDADE CID ON CON.CID_CODIGO = CID.CID_CODIGO
    WHERE EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2014
     AND CID.PAI_CODIGO = PAI.PAI_CODIGO) 
ORDER BY 1
  
SELECT PAI.NOME 
  FROM PAIS PAI
EXCEPT
SELECT PAI.NOME 
  FROM PEDIDO PED
  JOIN CONSUMIDOR CON ON PED.CON_CODIGO = CON.CON_CODIGO
  JOIN CIDADE CID ON CON.CID_CODIGO = CID.CID_CODIGO
  JOIN PAIS PAI ON CID.PAI_CODIGO = PAI.PAI_CODIGO
 WHERE EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2014 
ORDER BY 1

--> PAIS E CIDADE

SELECT PAI.NOME, CID.NOME 
  FROM PAIS PAI
  JOIN CIDADE CID ON CID.PAI_CODIGO = PAI.PAI_CODIGO
 WHERE (PAI.PAI_CODIGO, CID.CID_CODIGO) NOT IN 
     (SELECT CID.PAI_CODIGO, CID.CID_CODIGO 
	    FROM PEDIDO PED
        JOIN CONSUMIDOR CON ON PED.CON_CODIGO = CON.CON_CODIGO
        JOIN CIDADE CID ON CON.CID_CODIGO = CID.CID_CODIGO
       WHERE EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2014) 
ORDER BY 1

SELECT PAI.NOME, CIT.NOME 
  FROM PAIS PAI
  JOIN CIDADE CIT ON CIT.PAI_CODIGO = PAI.PAI_CODIGO
 WHERE NOT EXISTS 
 (SELECT 1 
    FROM PEDIDO PED
    JOIN CONSUMIDOR CON ON PED.CON_CODIGO = CON.CON_CODIGO
    JOIN CIDADE CID ON CON.CID_CODIGO = CID.CID_CODIGO
   WHERE EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2014
     AND CID.PAI_CODIGO = PAI.PAI_CODIGO
     AND CID.CID_CODIGO = CIT.CID_CODIGO) 
ORDER BY 1
  
SELECT PAI.NOME, CID.NOME 
  FROM PAIS PAI
  JOIN CIDADE CID ON CID.PAI_CODIGO = PAI.PAI_CODIGO
EXCEPT
SELECT PAI.NOME, CID.NOME 
  FROM PEDIDO PED
  JOIN CONSUMIDOR CON ON PED.CON_CODIGO = CON.CON_CODIGO 
  JOIN CIDADE CID ON CON.CID_CODIGO = CID.CID_CODIGO
  JOIN PAIS PAI ON CID.PAI_CODIGO = PAI.PAI_CODIGO
 WHERE EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2014 
 ORDER BY 1

-- CUBE E ROLLUP

SELECT REG.DESCRICAO AS REGIAO, 
       SEG.DESCRICAO AS SEGMENTO, 
	   COUNT(*) AS QTDE
  FROM PEDIDO PED
  JOIN CONSUMIDOR CON ON PED.CON_CODIGO = CON.CON_CODIGO 
  JOIN CIDADE CID ON CON.CID_CODIGO = CID.CID_CODIGO
  JOIN PAIS PAI ON CID.PAI_CODIGO = PAI.PAI_CODIGO
  JOIN REGIAO REG ON PAI.REG_CODIGO = REG.REG_CODIGO
  JOIN SEGMENTO SEG ON CON.SEG_CODIGO = SEG.SEG_CODIGO
 GROUP BY ROLLUP(SEG.DESCRICAO, REG.DESCRICAO) 
 
SELECT REG.DESCRICAO AS REGIAO, 
       SEG.DESCRICAO AS SEGMENTO, 
	   COUNT(*) AS QTDE
  FROM PEDIDO PED
  JOIN CONSUMIDOR CON ON PED.CON_CODIGO = CON.CON_CODIGO 
  JOIN CIDADE CID ON CON.CID_CODIGO = CID.CID_CODIGO
  JOIN PAIS PAI ON CID.PAI_CODIGO = PAI.PAI_CODIGO
  JOIN REGIAO REG ON PAI.REG_CODIGO = REG.REG_CODIGO
  JOIN SEGMENTO SEG ON CON.SEG_CODIGO = SEG.SEG_CODIGO
 GROUP BY CUBE(SEG.DESCRICAO, REG.DESCRICAO)  
 
SELECT EXTRACT(YEAR FROM PED.DATA_PEDIDO) AS ANO,
       REG.DESCRICAO AS REGIAO, 
       SEG.DESCRICAO AS SEGMENTO, 
	   	   COUNT(*) AS QTDE
  FROM PEDIDO PED
  JOIN CONSUMIDOR CON ON PED.CON_CODIGO = CON.CON_CODIGO 
  JOIN CIDADE CID ON CON.CID_CODIGO = CID.CID_CODIGO
  JOIN PAIS PAI ON CID.PAI_CODIGO = PAI.PAI_CODIGO
  JOIN REGIAO REG ON PAI.REG_CODIGO = REG.REG_CODIGO
  JOIN SEGMENTO SEG ON CON.SEG_CODIGO = SEG.SEG_CODIGO
 GROUP BY EXTRACT(YEAR FROM PED.DATA_PEDIDO), 
     CUBE(SEG.DESCRICAO, REG.DESCRICAO) 

-- CASE

-- CASE WHEN ... THEN ... ELSE ... END

SELECT EXTRACT(YEAR FROM PED.DATA_PEDIDO) AS ANO,
	   CAT.DESCRICAO AS CATEGORIA, SEG.DESCRICAO AS SEGMENTO,
	   CASE WHEN ITM.VALOR_LUCRO > 0 THEN 'LUCRO'		
	        ELSE 'PREJUIZO'
	   END AS RESULTADO		
  FROM ITEM ITM
  JOIN PEDIDO PED ON ITM.PED_CODIGO = PED.PED_CODIGO
  JOIN PRODUTO PRO ON ITM.PRO_CODIGO = PRO.PRO_CODIGO
  JOIN CONSUMIDOR CON ON PED.CON_CODIGO = CON.CON_CODIGO
  JOIN SEGMENTO SEG ON CON.SEG_CODIGO = SEG.SEG_CODIGO
  JOIN SUBCATEGORIA SUB ON PRO.SUB_CODIGO = SUB.SUB_CODIGO
  JOIN CATEGORIA CAT ON SUB.CAT_CODIGO = CAT.CAT_CODIGO

SELECT EXTRACT(YEAR FROM PED.DATA_PEDIDO) AS ANO,
       CAT.DESCRICAO AS CATEGORIA,
	   SEG.DESCRICAO AS SEGMENTO,
	   VALOR_BRUTO, VALOR_LUCRO,
	   CASE WHEN VALOR_LUCRO > 0 THEN 'LUCRO'
	        WHEN VALOR_LUCRO = 0 THEN 'ZERO'
	        ELSE 'PREJUIZO' END AS RESULTADO
  FROM ITEM ITM
  JOIN PEDIDO PED ON ITM.PED_CODIGO = PED.PED_CODIGO
  JOIN PRODUTO PRO ON ITM.PRO_CODIGO = PRO.PRO_CODIGO
  JOIN CONSUMIDOR CON ON PED.CON_CODIGO = CON.CON_CODIGO
  JOIN SEGMENTO SEG ON CON.SEG_CODIGO = SEG.SEG_CODIGO
  JOIN SUBCATEGORIA SUB ON PRO.SUB_CODIGO = SUB.SUB_CODIGO
  JOIN CATEGORIA CAT ON SUB.CAT_CODIGO = CAT.CAT_CODIGO

-- SUM(CASE WHEN ... THEN ... ELSE ... END)

SELECT SUM(CASE WHEN ITM.VALOR_LUCRO > 0 THEN 1 ELSE 0 END) AS LUCRO,
       SUM(CASE WHEN ITM.VALOR_LUCRO < 0 THEN 1 ELSE 0 END) AS PREJUIZO
  FROM ITEM ITM

WITH RESULTADO AS
(SELECT SUM(CASE WHEN VALOR_LUCRO >= 0 THEN 1 ELSE 0 END) AS ITENS_LUCROS,  
       SUM(CASE WHEN VALOR_LUCRO < 0 THEN 1 ELSE 0 END) AS ITENS_PREJUIZOS,
	   COUNT(*) AS TOTAL
  FROM ITEM)
SELECT ITENS_LUCROS, 
       ROUND((ITENS_LUCROS / TOTAL * 100),2) AS PERC_LUCROS, 
       ITENS_PREJUIZOS, 
       ROUND((ITENS_PREJUIZOS / TOTAL * 100),2) AS PERC_PREJUIZOS,
	   TOTAL
  FROM RESULTADO 

-- CROSS TABLE - GROUP BY - SUM(CASE WHEN ... THEN ... ELSE ... END)

SELECT SUB.DESCRICAO AS SUBCATEGORIA,
       SUM(VALOR_BRUTO) AS TOTAL	   
  FROM ITEM ITM
  JOIN PEDIDO PED ON ITM.PED_CODIGO = PED.PED_CODIGO
  JOIN PRODUTO PRO ON ITM.PRO_CODIGO = PRO.PRO_CODIGO
  JOIN SUBCATEGORIA SUB ON PRO.SUB_CODIGO = SUB.SUB_CODIGO
 GROUP BY 1 
 
SELECT SUB.DESCRICAO AS SUBCATEGORIA,
	   SUM(CASE WHEN EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2011
	       THEN VALOR_BRUTO ELSE 0 END) AS ANO_2011,
	   SUM(CASE WHEN EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2012
	       THEN VALOR_BRUTO ELSE 0 END) AS ANO_2012,
	   SUM(CASE WHEN EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2013
	       THEN VALOR_BRUTO ELSE 0 END) AS ANO_2013,
	   SUM(CASE WHEN EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2014
	       THEN VALOR_BRUTO ELSE 0 END) AS ANO_2014,
           SUM(VALOR_BRUTO) AS TOTAL
  FROM ITEM ITM
  JOIN PEDIDO PED ON ITM.PED_CODIGO = PED.PED_CODIGO
  JOIN PRODUTO PRO ON ITM.PRO_CODIGO = PRO.PRO_CODIGO
  JOIN SUBCATEGORIA SUB ON PRO.SUB_CODIGO = SUB.SUB_CODIGO
 GROUP BY 1 

-- CROSS TABLE --> WITH -- PERCENTUAIS

WITH CROSS_TABLE AS
(SELECT SUB.DESCRICAO AS SUBCATEGORIA,
	   SUM(CASE WHEN EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2011
	       THEN VALOR_BRUTO ELSE 0 END) AS ANO_2011,
	   SUM(CASE WHEN EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2012
	       THEN VALOR_BRUTO ELSE 0 END) AS ANO_2012,
	   SUM(CASE WHEN EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2013
	       THEN VALOR_BRUTO ELSE 0 END) AS ANO_2013,
	   SUM(CASE WHEN EXTRACT(YEAR FROM PED.DATA_PEDIDO) = 2014
	       THEN VALOR_BRUTO ELSE 0 END) AS ANO_2014,
       SUM(VALOR_BRUTO) AS TOTAL
  FROM ITEM ITM
  JOIN PEDIDO PED ON ITM.PED_CODIGO = PED.PED_CODIGO
  JOIN PRODUTO PRO ON ITM.PRO_CODIGO = PRO.PRO_CODIGO
  JOIN SUBCATEGORIA SUB ON PRO.SUB_CODIGO = SUB.SUB_CODIGO
 GROUP BY 1)
SELECT SUBCATEGORIA,
       ROUND((ANO_2011 / TOTAL * 100),2) AS ANO_2011,
       ROUND((ANO_2012 / TOTAL * 100),2) AS ANO_2012,
       ROUND((ANO_2013 / TOTAL * 100),2) AS ANO_2013,
       ROUND((ANO_2014 / TOTAL * 100),2) AS ANO_2014
  FROM CROSS_TABLE

REGRESSÃO LINEAR

SELECT EXTRACT(YEAR FROM PED.DATA_PEDIDO) AS ANO,
        EXTRACT(MONTH FROM PED.DATA_PEDIDO) AS MES,
     (((EXTRACT(YEAR FROM PED.DATA_PEDIDO) * 12) + EXTRACT(MONTH FROM PED.DATA_PEDIDO)) -
       (SELECT MIN(EXTRACT(YEAR FROM PDD.DATA_PEDIDO)) FROM PEDIDO PDD) * 12) AS PERIODO,
        SUM(VALOR_BRUTO) AS VALOR
   FROM ITEM ITM
   JOIN PEDIDO PED ON ITM.PED_CODIGO = PED.PED_CODIGO
  GROUP BY 1, 2, 3
  ORDER BY 1, 2, 3

WITH REGRESSAO AS
(SELECT EXTRACT(YEAR FROM PED.DATA_PEDIDO) AS ANO,
        EXTRACT(MONTH FROM PED.DATA_PEDIDO) AS MES,
     (((EXTRACT(YEAR FROM PED.DATA_PEDIDO) * 12) + EXTRACT(MONTH FROM PED.DATA_PEDIDO)) -
       (SELECT MIN(EXTRACT(YEAR FROM PDD.DATA_PEDIDO)) FROM PEDIDO PDD) * 12) AS PERIODO,
        SUM(VALOR_BRUTO) AS VALOR
   FROM ITEM ITM
   JOIN PEDIDO PED ON ITM.PED_CODIGO = PED.PED_CODIGO
  GROUP BY 1, 2, 3)
SELECT ANO, MES, VALOR,
 ((PERIODO * (SELECT REGR_SLOPE(VALOR, PERIODO) FROM REGRESSAO)) +
  (SELECT REGR_INTERCEPT(VALOR, PERIODO) FROM REGRESSAO)) AS PROJECAO
  FROM REGRESSAO
 ORDER BY ANO, MES 

ESTATÃSTICA DESCRITIVA 

WITH REGRESSAO AS
(SELECT EXTRACT(YEAR FROM PED.DATA_PEDIDO) AS ANO,
        EXTRACT(MONTH FROM PED.DATA_PEDIDO) AS MES,
     (((EXTRACT(YEAR FROM PED.DATA_PEDIDO) * 12) + EXTRACT(MONTH FROM PED.DATA_PEDIDO)) -
       (SELECT MIN(EXTRACT(YEAR FROM PDD.DATA_PEDIDO)) FROM PEDIDO PDD) * 12) AS PERIODO,
        SUM(VALOR_BRUTO) AS VALOR
   FROM ITEM ITM
   JOIN PEDIDO PED ON ITM.PED_CODIGO = PED.PED_CODIGO
  GROUP BY 1, 2, 3)
SELECT ANO, MES, VALOR,
 ((PERIODO * (SELECT REGR_SLOPE(VALOR, PERIODO) FROM REGRESSAO)) +
  (SELECT REGR_INTERCEPT(VALOR, PERIODO) FROM REGRESSAO)) AS PROJECAO,
   ROUND(((VALOR - (SELECT AVG(VALOR) FROM REGRESSAO)) / (SELECT STDDEV(VALOR) FROM REGRESSAO)),4) AS ZVALUE,
       CASE WHEN VALOR > ((SELECT PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY VALOR) FROM REGRESSAO) +
                          ((SELECT PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY VALOR) FROM REGRESSAO) -
                           (SELECT PERCENTILE_DISC(0.25) WITHIN GROUP (ORDER BY VALOR) FROM REGRESSAO)) * 1.5)
            THEN 'OUTLIER'
            ELSE 'NORMAL'              
        END AS OUTLIER_MAXIMO,
        CASE WHEN VALOR >= (SELECT AVG(VALOR) FROM REGRESSAO)
             THEN 'ACIMA'
             ELSE 'ABAIXO'
        END AS CLASSE_MEDIA,
        CASE WHEN VALOR > ((SELECT AVG(VALOR) FROM REGRESSAO) +
                           (1.96 * (SELECT STDDEV(VALOR) FROM REGRESSAO) / 
							SQRT((SELECT COUNT(1) FROM REGRESSAO))))
             THEN 'ACIMA'              
             WHEN VALOR < ((SELECT AVG(VALOR) FROM REGRESSAO) -
                           (1.96 * (SELECT STDDEV(VALOR) FROM REGRESSAO) / 
							SQRT((SELECT COUNT(1) FROM REGRESSAO))))
             THEN 'ABAIXO'
             ELSE 'MEDIA'
        END AS CLASS_IC 
  FROM REGRESSAO
 ORDER BY ANO, MES 

PARAMETROS ESTATÃSTICOS DA SÃRIE

WITH REGRESSAO AS
(SELECT EXTRACT(YEAR FROM PED.DATA_PEDIDO) AS ANO,
        EXTRACT(MONTH FROM PED.DATA_PEDIDO) AS MES,
     (((EXTRACT(YEAR FROM PED.DATA_PEDIDO) * 12) + EXTRACT(MONTH FROM PED.DATA_PEDIDO)) -
       (SELECT MIN(EXTRACT(YEAR FROM PDD.DATA_PEDIDO)) FROM PEDIDO PDD) * 12) AS PERIODO,
        SUM(VALOR_BRUTO) AS VALOR
   FROM ITEM ITM
   JOIN PEDIDO PED ON ITM.PED_CODIGO = PED.PED_CODIGO
  GROUP BY 1, 2, 3)
SELECT  
       (SELECT COUNT(1) FROM REGRESSAO) AS QUANTIDADE,
       (SELECT AVG(VALOR) FROM REGRESSAO) AS MEDIA,
       (SELECT STDDEV(VALOR) FROM REGRESSAO) AS DESVIO_PADRAO,
       (SELECT MIN(VALOR) FROM REGRESSAO) AS MINIMO,
       (SELECT PERCENTILE_DISC(0.25) WITHIN GROUP (ORDER BY VALOR) FROM REGRESSAO) AS Q1,
       (SELECT PERCENTILE_DISC(0.50) WITHIN GROUP (ORDER BY VALOR) FROM REGRESSAO) AS MEDIAN,
       (SELECT PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY VALOR) FROM REGRESSAO) AS Q3,
       (SELECT MAX(VALOR) FROM REGRESSAO) AS MAXIMO,      
       ((SELECT PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY VALOR) FROM REGRESSAO) -
        (SELECT PERCENTILE_DISC(0.25) WITHIN GROUP (ORDER BY VALOR) FROM REGRESSAO)) AS IQR,
       (SELECT REGR_SLOPE(VALOR, PERIODO) FROM REGRESSAO) AS SLOPE,
       (SELECT REGR_INTERCEPT(VALOR, PERIODO) FROM REGRESSAO) AS INTERCEPT,
       (1.96 * (SELECT STDDEV(VALOR) FROM REGRESSAO) / SQRT((SELECT COUNT(1) FROM REGRESSAO))) AS ERRO,
       ((SELECT AVG(VALOR) FROM REGRESSAO) -
        (1.96 * (SELECT STDDEV(VALOR) FROM REGRESSAO) / SQRT((SELECT COUNT(1) FROM REGRESSAO)))) AS IC_LI,
       ((SELECT AVG(VALOR) FROM REGRESSAO) +
        (1.96 * (SELECT STDDEV(VALOR) FROM REGRESSAO) / SQRT((SELECT COUNT(1) FROM REGRESSAO)))) AS IC_LS,
       ((SELECT PERCENTILE_DISC(0.25) WITHIN GROUP (ORDER BY VALOR) FROM REGRESSAO) -
        ((SELECT PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY VALOR) FROM REGRESSAO) -
         (SELECT PERCENTILE_DISC(0.25) WITHIN GROUP (ORDER BY VALOR) FROM REGRESSAO)) * 1.5) AS FENCE_LOWER,
       ((SELECT PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY VALOR) FROM REGRESSAO) +
        ((SELECT PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY VALOR) FROM REGRESSAO) -
         (SELECT PERCENTILE_DISC(0.25) WITHIN GROUP (ORDER BY VALOR) FROM REGRESSAO)) * 1.5) AS FENCE_UPPER

--WINDOW FUNCTION

with sub as (
select cat.descricao as categoria,
       sub.descricao as subcategoria,
  sum(valor_bruto) as valor
  from item itm
  join produto pro on itm.pro_codigo = pro.pro_codigo
  join subcategoria sub on pro.sub_codigo = sub.sub_codigo
  join categoria cat on sub.cat_codigo = cat.cat_codigo
 group by 1, 2
)
select categoria, subcategoria, valor, sum(valor) over (partition by categoria),
       round((valor / sum(valor) over (partition by categoria) * 100),2) as percentual,
  rank() over (order by valor desc),
  rank() over (partition by categoria order by valor desc)
  from sub

with sub as (
select cat.descricao as categoria,
  extract(year from ped.data_pedido) as ano,
  sum(valor_bruto) as valor
  from pedido ped
  join item itm on itm.ped_codigo = ped.ped_codigo
  join produto pro on itm.pro_codigo = pro.pro_codigo
  join subcategoria sub on pro.sub_codigo = sub.sub_codigo
  join categoria cat on sub.cat_codigo = cat.cat_codigo
 group by 1, 2
 order by 1, 2
)
select categoria, ano, valor, sum(valor) over (partition by categoria),
       round((valor / sum(valor) over (partition by categoria) * 100),2) as percentual,
  rank() over (order by valor desc),
  rank() over (partition by categoria order by valor desc),
  lag(valor, 1) over (partition by categoria order by ano asc),
       (valor - lag(valor, 1) over (partition by categoria order by ano)) as diferenca,
  ((valor / first_value(valor) over (partition by categoria order by valor asc) - 1 )* 100) as aumento
from sub

with sub as (
select extract(month from data_pedido) as mes,
       sum(valor_bruto) as valor
  from pedido ped
  join item itm on itm.ped_codigo = ped.ped_codigo
 group by 1
 order by 1
)
select mes, valor, ntile(3) over (order by valor) from sub
 
